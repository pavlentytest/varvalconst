fun main2() {
    // ссылка val не изменяемая, но сам объект - можно изменить

    val list = listOf(1,2,3,5)
    //list = listOf(5,6,7,8)

    val color: MutableList<String> = arrayListOf("red","green","blue")
    color.add("black")

    println(color)

    //Мы можем использовать const для константы на этапе компиляции,
// а для val мы можем присвоить неизменяемое значение
// на этапе рантайма.


}

//Также Kotlin поддерживает константы времени компиляции.
//Для их определения применяются ключевые слова const val

const val maxAge = 120  // константа
fun main() {
    println(maxAge)
}

//Отличительной особенностью констант является то,
// что они на стадии компиляции должны иметь некоторое значение,
// и это значение изменить нельзя.
// Это накладывает на использование констант ряд ограничений:


const val maxAge3 = 120  // константа
fun main3() {
    maxAge3 = 1500   // ошибка
    println(maxAge)
}


// Константа должна объявляться на самом верхнем уровне (вне класса/функции):
fun main4() {
    const val maxAge = 120   // ошибка
    println(maxAge)
}

/*
Также стоит отметит отличие val-переменных от констант (const val):
значение val-переменных устанавливается во время выполнения,
 а значение констант - во время компиляции.
  Значение val-переменной также нельзя изменить после установки,
   однако мы можем объявить val-переменную,
   а потом дальше в программе присвоить ей значение.
    Константе же необходимо присвоить значение сразу при определении.
 */